<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.loginstats.login_stats_api.dao.StatisticMapper">

    <select id="selectYearLogin" parameterType="string" resultType="YearCountDto">
        SELECT
            YEAR(createDate) AS year,          -- DTO의 year 필드와 매핑
            COUNT(DISTINCT userID) AS totCnt   -- DTO의 totCnt 필드와 매핑
        FROM
            request_info
        WHERE
            YEAR(createDate) = #{year}
        GROUP BY
            YEAR(createDate)
    </select>


    <select id="selectYearMonthLogin" parameterType="map" resultType="YearMonthCountDto">
        SELECT
            YEAR(createDate) AS year,          -- DTO의 year 필드와 매핑
            MONTH(createDate) AS month,        -- DTO의 month 필드와 매핑
            COUNT(DISTINCT userID) AS totCnt   -- DTO의 totCnt 필드와 매핑
        FROM
            request_info
        WHERE
            YEAR(createDate) = #{year}
          AND MONTH(createDate) = #{month}
        GROUP BY
            YEAR(createDate),
            MONTH(createDate)
    </select>
    <select id="selectYearAverageLogin" parameterType="String" resultType="YearAverageCountDto">
        SELECT
            #{year} AS year,  -- 전달받은 year 값을 year 필드와 매핑
        (COUNT(DISTINCT userID) / 12) AS totCnt  -- 총 로그인 수를 12로 나눠서 월 평균 로그인 횟수 계산
        FROM
            request_info
        WHERE
            YEAR(createDate) = #{year}
        GROUP BY
            YEAR(createDate)
    </select>
    <select id="selectYearMonthAverageLogin" parameterType="map" resultType="YearMonthAverageCountDto">
        SELECT
            YEAR(createDate) AS year,          -- DTO의 year 필드와 매핑
            MONTH(createDate) AS month,        -- DTO의 month 필드와 매핑
            (COUNT(DISTINCT userID)/30) AS totCnt   -- 해당 월의 값을 30일로 나눠 DTO의 totCnt 필드와 매핑
        FROM
            request_info
        WHERE
            YEAR(createDate) = #{year}
          AND MONTH(createDate) = #{month}
        GROUP BY
            YEAR(createDate),
            MONTH(createDate)
    </select>
    <select id="selectDepartmentYearMonthLogin" parameterType="map" resultType="DepartmentYearMonthCountDto">
        SELECT
            YEAR(createDate) AS year,
            MONTH(createDate) AS month,
            COUNT(DISTINCT userID) AS totCnt,
            department
        FROM
            request_info
        WHERE
            YEAR(createDate) = #{year}
          AND MONTH(createDate) = #{month}
        GROUP BY
            YEAR(createDate), MONTH(createDate), department
    </select>
    <select id="selectExcludeHolidaysYearMonthLogin" parameterType="map" resultType="Integer">
        SELECT COUNT(DISTINCT userID)
        FROM request_info
        WHERE YEAR(createDate) = #{year}
        AND MONTH(createDate) = #{month}
        <if test="holidays != null and holidays.size() > 0">
            AND DATE(createDate) NOT IN
            <foreach collection="holidays" item="holiday" open="(" close=")" separator=",">
                #{holiday}
            </foreach>
        </if>
    </select>




</mapper>